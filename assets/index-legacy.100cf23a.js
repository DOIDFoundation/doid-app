System.register(["./index-legacy.851ca1b5.js","./doid-symbol-legacy.238cc922.js","./vendor-legacy.69b4e889.js"],(function(t,e){"use strict";var s,i,a,r,n,o,d,c,l,h,p,m,u,g,y,b,x,w,v,f,$,k,O,j,S,C,I,D;return{setters:[t=>{s=t.n,i=t.e,a=t._,r=t.f,n=t.h,o=t.T,d=t.b,c=t.s,l=t.a,h=t.c,p=t.d,m=t.r},t=>{u=t.g,g=t.a,y=t.b,b=t.c,x=t.u,w=t.w,v=t.n},t=>{f=t.z,$=t.b,k=t.y,O=t.h,j=t.e,S=t.n,C=t.j,I=t.f,D=t.d}],execute:function(){class q{constructor(t,{errorCodes:e="",seq:s,delay:i=0,allowAlmostSuccess:a=!1,onSent:r=(()=>{})}={}){this.pending=!0,this.status=-1,this.allowAlmostSuccess=a,this.txPromise=t,this.err=void 0,this.hash="",this.errorCodes=e,this.seq=s,this.delay=i,this.onSent=r}get success(){return 1===this.status}get almostSuccess(){return 4===this.status}get ignored(){return 3===this.status}async wait(t=!1){return(async()=>{let n=!1;const o=await(async t=>t?"object"==typeof t?t:await a(Object.assign({"./abi/Locker.codes.json":()=>r((()=>e.import("./Locker.codes-legacy.d5ca7e1e.js")),void 0),"./abi/Resolver.codes.json":()=>r((()=>e.import("./Resolver.codes-legacy.77c566ca.js")),void 0)}),`./abi/${t}.codes.json`):{})(this.errorCodes);try{const e=await this.txPromise;this.onSent(e);const{hash:s,nonce:a}=e;this.seq.nonce=a,this.seq&&(delete this.seq.overrides,u().add(Object.assign(this.seq,{hash:s}))),this.hash=s,this.status=2;const r=async()=>{const{status:t,events:i}=await e.wait(1);if(1!==t)throw this.seq&&(this.seq.err=!0),new Error("Failed");i.some((({event:t,args:e}={})=>{if("Failure"===t){let{info:t,detail:s,error:i}=e;const a=i.toString(),r=o[i],n={code:a,message:r,error:i,info:t?.toString(),detail:s?.toString()};this.seq&&(this.seq.err=!0);const d=new Error(r);throw Object.assign(d,{code:a,raw:n}),this.allowAlmostSuccess&&(this.status=4),d}})),this.status=1,this.seq&&(this.seq.done=!0),this.delay?u().delDelay(s,this.delay):u().del(s)};t?(n=!0,r()):await r()}catch(d){throw await s(d),4001===d.code?this.status=3:4!==this.status&&(this.status=0),this.err=d,d}finally{this.pending=!1;const t=1===this.status;i.emit("tx-status",this.hash),t&&i.emit("tx-success",this.hash),n=t}return n})()}}const P=async t=>`${await b()}.${t}`,T=()=>(new Date).getTime(),A=async t=>{const e=sessionStorage.getItem(await P(t));if(e)return JSON.parse(e)},R=async(t,e)=>{const s=await A(t)||{};Object.assign(s,e),sessionStorage.setItem(await P(t),JSON.stringify(s))},_=async t=>{const e=await(async(t,e,s="",i=[])=>{const a=await A(t);if(a)return a;const r=await g();e||(e=await y());const n={secret:await r.makeCommitment(t,e,f(s),i),ts:T()};return await R(t,n),n})(t),s=await g(),[i,a]=["commit",{}],r=[e.secret];await n(a,s,i,r);const o=s[i](...r);return new q(o,{errorCodes:"Resolver",seq:{type:"commit",title:"Commit",ts:T(),overrides:a},onSent:()=>R(t,{ts:T()})})};var B=Object.defineProperty,E=Object.getOwnPropertyDescriptor,L=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?E(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&B(e,s,r),r};let N=class extends(o("")){constructor(){super(...arguments),this.bindBridge=new $(this,d)}get bridge(){return d.bridge}get txScanUri(){const{hash:t}=this.tx;return t?`${this.bridge.network.current.scan}/tx/${t}`:""}render(){return k`<dui-link class="uri mt-4" href="${this.txScanUri}" target="_blank" rel="noopener">View Transaction: ${c(this.tx.hash)}</dui-link>`}};L([O({type:Object})],N.prototype,"tx",2),N=L([j("tx-view")],N);var V=Object.defineProperty,H=Object.getOwnPropertyDescriptor,U=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?H(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&V(e,s,r),r};let Y=class extends(o(".tx-state{display:flex;flex-direction:column;align-items:center;flex-grow:1}.tx-state-icon.success{color:green}.tx-state-icon.failed{color:red}.tx-state-icon.warn{color:orange}.tx-state-msg{word-break:break-word;white-space:normal}\n")){constructor(){super(),this.bindBridge=new $(this,d),this.txType=!1,this.onlyAwaitHash=!1,this.opts={}}get bridge(){return d.bridge}get icons(){const[t='<i class="mdi mdi-check-all"></i>',e='<i class="mdi mdi-check"></i>',s='<i class="mdi mdi-close"></i>',i='<i class="mdi mdi-loading"></i>']=this.opts.icons??[];return{success:t,failed:s,wait:i,almostSuccess:e}}get hashOk(){return this.onlyAwaitHash&&this.tx.hash}get state(){let[t,e,s]=["","",""];const{state:i}=this.opts;switch(this.tx.status){case-1:[t,e,s]=[this.icons.wait,i?.wait||"Waiting for confirmation...","wait"];break;case 0:[t,e,s]=[this.icons.failed,this.tx.err?.message??"Something went wrong","failed"];break;case 1:[t,e,s]=[this.icons.success,i?.success||"Success","success"];break;case 2:[t,e]=[this.icons.wait,"Confirm the transaction."];break;case 4:[t,e,s]=[this.icons.almostSuccess,this.tx.err?.message||"Almost Success","warn"]}return this.hashOk&&([t,e,s]=[this.icons.success,i?.success||"Success","success"]),{icon:t,txt:e,css:s}}get txScanUri(){const{hash:t}=this.tx;return t?`${this.bridge.network.current.scan}/tx/${t}`:""}render(){return k`<div class="tx-state m-4"><div class="tx-state-icon my-3 text-3xl mx-auto ${this.state.css}">${S(this.tx.pending&&!this.hashOk,(()=>k`<slot name="pending"><i class="mdi mdi-loading"></i></slot>`),(()=>k`<span>${C(this.state.icon)}</span>`))}</div><div class="tx-state-msg my-4"><slot>${this.state.txt}</slot></div><div class="flex gap-4">${S(this.tx.hash,(()=>k`${S(this.tx.success||this.tx.almostSuccess,(()=>k`<slot name="view"><tx-view .tx="${this.tx}"></tx-view></slot>`),(()=>k`<tx-view .tx="${this.tx}"></tx-view>`))}`))}</div></div>`}};U([O({type:Object})],Y.prototype,"tx",2),U([O({type:Boolean})],Y.prototype,"txType",2),U([O({type:Boolean})],Y.prototype,"onlyAwaitHash",2),U([O({type:Object})],Y.prototype,"opts",2),Y=U([j("tx-state")],Y);var F=Object.defineProperty,J=Object.getOwnPropertyDescriptor,M=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?J(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&F(e,s,r),r};let W=class extends(o("")){constructor(){super(...arguments),this.bindBridge=new $(this,d),this.sm=!1,this.tx=null,this.success=!1,this.dialog=!1,this.claim=async()=>{try{this.tx=await(async t=>{const e=await l("Locker",{account:(await h()).bridge.account}),[s,i,a]=["claimDoid",{},[+t]];await n(i,e,s,a);const r=e[s](...a);return new q(r,{errorCodes:"Locker",seq:{type:"claim-name",title:"Claim Name",ts:(new Date).getTime(),overrides:i}})})(+this.passId),this.success=await this.tx.wait()}catch(t){if(4001===t.code)return this.close()}}}get name(){return this.nameInfo?.name}get passId(){return this.nameInfo?.id||0}get txPending(){return this.tx&&!this.tx?.ignored}close(t=!1){this.dialog=!1,this.tx=void 0,t&&this.emit("success"),this.emit("show",!1)}open(){this.dialog=!0,this.emit("show",!0)}render(){return k`<dui-button ?disabled="${this.dialog}" ?pending="${this.dialog}" class="secondary" @click="${this.open}" ?sm="${this.sm}"><slot>Claim</slot></dui-button>${S(this.dialog,(()=>k`<dui-dialog @close="${()=>this.close()}"><div slot="header">Claim DOID name</div><div class="min-h-10">${S(!this.tx?.success,(()=>k`<div class="text-center">You are claiming for:<p class="text-black my-4 text-lg"><b class="text-blue-600">${this.name}</b>.doid</p><p>${k`(Note: This pass <b class="text-base text-orange-500">#${this.passId}</b> will be burned after claiming.)`}</p></div>`))} ${S(this.txPending,(()=>k`<tx-state .tx="${this.tx}" .opts="${{state:{success:`Success. You are the registrant of ${this.name} now`}}}"><dui-button slot="view" @click="${()=>this.close(!0)}">Close</dui-button></tx-state>`),(()=>k`<p class="mt-8 text-center"><dui-button class="success" @click="${this.claim}">Continue</dui-button></p>`))}</div></dui-dialog>`))}`}};M([O({type:Object})],W.prototype,"nameInfo",2),M([O({type:Boolean})],W.prototype,"sm",2),M([I()],W.prototype,"tx",2),M([I()],W.prototype,"success",2),M([I()],W.prototype,"dialog",2),W=M([j("doid-claim-name")],W);var z=Object.defineProperty,K=Object.getOwnPropertyDescriptor,G=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?K(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&z(e,s,r),r};let Q=class extends(o('ol{margin-top:1rem;margin-bottom:1rem;display:grid;grid-gap:1rem;gap:1rem}@media (min-width: 768px){ol{grid-template-columns:repeat(3,minmax(0,1fr))}}ol li{position:relative;display:inline-flex;flex-direction:column;gap:1rem;border-radius:.375rem;--tw-bg-opacity: 1;background-color:rgba(243,244,246,var(--tw-bg-opacity));padding:1.25rem 1rem 1rem 3.5rem}ol li:before{position:absolute;left:.75rem;top:.75rem;display:flex;height:2rem;width:2rem;align-items:center;justify-content:center;border-radius:9999px;border-width:1px;--tw-bg-opacity: 1;background-color:rgba(255,255,255,var(--tw-bg-opacity));font-weight:700}ol li.active{--tw-bg-opacity: 1;background-color:rgba(226,232,240,var(--tw-bg-opacity))}ol li.active:before{--tw-border-opacity: 1;border-color:rgba(148,163,184,var(--tw-border-opacity))}ol li>b{display:block}ol li:nth-child(1):before{content:"1"}ol li:nth-child(2):before{content:"2"}ol li:nth-child(3):before{content:"3"}\n')){constructor(){super(...arguments),this.name="",this.pending=!1,this.ts=0,this.step=1,this.tx=null,this.get=async()=>{this.ts++},this.commit=async()=>{this.pending=!0;try{this.tx=await _(this.name),await this.tx.wait(),this.step=2}catch(t){if("4001"===t.code)return;/( IC)/.test(t.message)&&(this.step=2)}finally{this.pending=!1}},this.go2success=()=>{p(this.detailsLink)}}get btnDisabled(){return this.pending}get txSuccess(){return this.tx&&!this.tx.ignored}get lockedByMe(){const{locked:t,itsme:e}=this.nameInfo;return t&&e}get detailsLink(){return`/name/${this.name}/details`}connectedCallback(){this.get(),super.connectedCallback()}render(){return this.nameInfo.available?this.lockedByMe?k`<div class="px-3"><h3 class="text-base mb-4">${`This DOID name is already locked by pass #${this.nameInfo.locked}`}</h3><doid-claim-name @success="${this.go2success}" .nameInfo="${this.nameInfo}">Claim this name</doid-claim-name></div>`:k`<div class="px-3"><h3 class="text-base">Registering a name requires you to complete 3 steps</h3><ol><li class="${D({active:this.step>=1})}"><b>Request to register</b><p>Your wallet will open and you will be asked to confirm the first of two transactions required for registration. If the second transaction is not processed within 7 days of the first, you will need to start again from step 1.</p></li><li class="${D({active:this.step>=2})}"><b>Wait for 1 minute</b><p>The waiting period is required to ensure another person hasn’t tried to register the same name and protect you after your request.</p></li><li class="${D({active:3===this.step})}"><b>Complete Registration</b><p>Click ‘register’ and your wallet will re-open. Only after the 2nd transaction is confirmed you'll know if you got the name.</p></li></ol><p class="text-center"><dui-button @click="${this.commit}" ?disabled="${this.btnDisabled}" ?pending="${this.pending}">Request to Register<i class="mdi ml-2 ${D(this.$c([this.pending?"mdi-loading":"mdi-chevron-right"]))}"></i></dui-button></p></div>`:k`<div class="px-3">This DOID name is already taken.<dui-link class="mx-1" href="${this.detailsLink}">See Details</dui-link></div>`}};G([O()],Q.prototype,"name",2),G([O({type:Object})],Q.prototype,"nameInfo",2),G([I()],Q.prototype,"pending",2),G([I()],Q.prototype,"ts",2),G([I()],Q.prototype,"step",2),G([I()],Q.prototype,"tx",2),Q=G([j("view-name-register")],Q);var X=Object.defineProperty,Z=Object.getOwnPropertyDescriptor,tt=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?Z(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&X(e,s,r),r};let et=class extends(o(".addr_name{min-width:100px;max-width:140px}.edit{margin-top:0;margin-bottom:0}.edit .addr_edit{width:14rem}@media (min-width: 1024px){.edit .addr_edit{width:24rem}}@media (max-width: 1024px){.addr_name{min-width:50px;max-width:60px}}\n")){constructor(){super(...arguments),this.type="ETH",this.address="",this.tip={addr:""},this.err={addr:"",tx:""},this.pending={addr:!1,tx:!1},this.addr="",this.addrValid=!1,this.mode="",this.validate=()=>(this.addr?this.err={...this.err,addr:""}:this.err={...this.err,addr:"Required"},!this.inputErr),this.validAddrByType=(t=this.type)=>{this.err={...this.err,addr:""};const e=x(this.addr);this.addrValid=!1,"ETH"===t?42!=e&&(this.err={...this.err,addr:"Invalid address"}):e<32&&(this.err={...this.err,addr:"Invalid address"}),this.addrValid=!this.err.addr},this.onInputAddr=t=>{this.addr=t.detail,this.err={...this.err,addr:"",tx:""},this.validAddrByType()},this.saveAddr=()=>{this.validate()&&this.addrValid&&(console.info(`save addr of ${this.type}: ${this.addr}`),setTimeout((()=>this.mode="")))},this.cancel=()=>{this.mode="",this.err={...this.err,addr:""},this.pending={...this.pending,addr:!1}},this.disconnectedCallback=()=>{super.disconnectedCallback()}}get inputErr(){for(let t in this.err)if("tx"!==t&&this.err[t])return!0;return!1}connectedCallback(){super.connectedCallback(),this.addr=this.address}render(){return k`<div class="flex justify-start items-center my-3 ${this.mode}"><div class="addr_name text-gray-400">${this.type}</div><div class="grow flex items-center"><div class="addr_edit">${S("edit"===this.mode,(()=>k`<dui-input-text value="${this.addr}" class="sm" @input="${this.onInputAddr}" ?disabled="${this.pending.tx}"><span slot="msg">${S(this.err.addr,(()=>k`<span class="text-red-500">${this.err.addr}</span>`),(()=>k``))}</span></dui-input-text>`),(()=>k`${S(this.address,(()=>k`${this.address}<dui-copy .value="${this.address}" sm icon><span slot="copied" class="text-green-500"><i class="mdi mdi-check-circle-outline"></i> </span><span slot="copy"><i class="mdi mdi-content-copy"></i></span></dui-copy>`),(()=>k`<span class="text-gray-400">No set</span>`))}`))}</div>${S("edit"===this.mode,(()=>k`<dui-button sm text class="ml-1 outlined" @click="${this.saveAddr}">Save</dui-button><dui-button sm text class="ml-1 outlined" @click="${this.cancel}">Cancel</dui-button>`),(()=>k`<dui-button sm icon class="ml-1"><i class="mdi mdi-pencil-outline" @click="${()=>this.mode="edit"}"></i></dui-button>`))}</div></div>`}};tt([O({type:String})],et.prototype,"type",2),tt([O({type:String})],et.prototype,"address",2),tt([I()],et.prototype,"tip",2),tt([I()],et.prototype,"err",2),tt([I()],et.prototype,"pending",2),tt([I()],et.prototype,"addr",2),tt([I()],et.prototype,"addrValid",2),tt([I()],et.prototype,"mode",2),et=tt([j("edit-addr-inline")],et);var st=Object.defineProperty,it=Object.getOwnPropertyDescriptor,at=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?it(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&st(e,s,r),r};let rt=class extends(o(".item_key{width:13rem;font-weight:500;min-width:140px;max-width:180px}\n")){constructor(){super(...arguments),this.name="",this.pending=!1,this.ts=0,this.get=async()=>{this.ts++}}get empty(){return!1}connectedCallback(){this.get(),super.connectedCallback()}render(){return k`<div class="px-3 py-4"><div class="flex justify-start items-center mb-3"><div class="item_key">PARENT</div><div><a href="/name/doid/details" class="text-blue-500">doid</a></div></div><hr class="mb-3 border-t border-dashed border-gray-300"><div class="flex flex-col lg_flex-row justify-start items-start mb-3"><div class="item_key">ADDRESS</div><div class="flex flex-col"><edit-addr-inline address=""></edit-addr-inline><edit-addr-inline type="BSC"></edit-addr-inline><edit-addr-inline type="OKC"></edit-addr-inline></div></div></div>`}};at([O()],rt.prototype,"name",2),at([I()],rt.prototype,"pending",2),at([I()],rt.prototype,"ts",2),rt=at([j("view-name-details")],rt);var nt=Object.defineProperty,ot=Object.getOwnPropertyDescriptor,dt=(t,e,s,i)=>{for(var a,r=i>1?void 0:i?ot(e,s):e,n=t.length-1;n>=0;n--)(a=t[n])&&(r=(i?a(e,s,r):a(r))||r);return i&&r&&nt(e,s,r),r};let ct=t("ViewName",class extends(o(":host::part(dui-nav){display:flex;margin-bottom:-2px}\n")){constructor(){super(...arguments),this.name="",this.action="",this.pending=!1,this.disconnected=!1,this.nameInfo=null,this.goto=()=>{m(`/name/${w(this.name)}/${this.action}`)},this.check=async(t,e=!1)=>{if(this.pending)return;if(await this.isDisconnected(e))return;this.pending=!0;const s=w(this.name);if(this.name!==s)this.name=s;else try{if(await this.isDisconnected(!0))return;if(this.nameInfo=await v(this.name),await this.isDisconnected(!0))return;this.action||(this.action=this.nameInfo.available?"register":"details")}catch(i){this.nameInfo=null}this.goto(),this.pending=!1}}get inReg(){return this.nameInfo&&!this.pending&&"register"===this.action}get inDetails(){return this.name&&!this.pending&&"details"===this.action}get empty(){return!this.name}connectedCallback(){super.connectedCallback(),this.check(null,!0),i.on("router-change",this.check)}disconnectedCallback(){console.log("dis"),super.disconnectedCallback(),i.off("router-change",this.check)}render(){return k`<div class="view-name"><div class="dui-container"><dui-ns-search .text="${this.name}" @search="${t=>p(`/search/${t.detail}`)}" placeholder="Search names"><span slot="label"></span> <span slot="msgd"></span></dui-ns-search>${S(this.name,(()=>k`<div class="border-b-2 flex my-4 px-3 pr-4 justify-between"><div><b>${this.name}</b> ${S("doid"===this.name,(()=>k`<em>(Registrant)</em>`))}</div><div><dui-nav slot="center" part="dui-nav"><dui-link href="${`/name/${this.name}/register`}" alias="${`/name/${this.name}`}" exact nav>Register</dui-link><dui-link href="${`/name/${this.name}/details`}" exact nav>Details</dui-link></dui-nav></div></div>`))} ${S(this.pending,(()=>k`<i class="mdi mdi-loading"></i> Loading...`))} ${S(this.inReg,(()=>k`<view-name-register .name="${this.name}" .nameInfo="${this.nameInfo}"></view-name-register>`))} ${S(this.inDetails,(()=>k`<view-name-details .name="${this.name}"></view-name-details>`))}</div></div>`}});dt([O()],ct.prototype,"name",2),dt([O()],ct.prototype,"action",2),dt([I()],ct.prototype,"pending",2),dt([I()],ct.prototype,"disconnected",2),dt([I()],ct.prototype,"nameInfo",2),t("ViewName",ct=dt([j("view-name")],ct))}}}));
