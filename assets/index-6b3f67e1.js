import{n as tt,e as k,_ as et,f as L,h as H,T as f,b as $,s as st,a as it,c as at,d as M,r as rt}from"./index-599dfc19.js";import{g as T,a as U,b as nt,c as ot,u as ct,w as N,n as dt}from"./doid-symbol-f965150e.js";import{z as lt,b as A,y as o,h as l,e as v,n as d,j as ht,f as c,d as C}from"./vendor-cc8c6684.js";const pt=async t=>t?typeof t=="object"?t:await et(Object.assign({"./abi/Locker.codes.json":()=>L(()=>import("./Locker.codes-d3f42ed5.js"),[]),"./abi/Resolver.codes.json":()=>L(()=>import("./Resolver.codes-ee4f74d3.js"),[])}),`./abi/${t}.codes.json`):{};class Y{constructor(s,{errorCodes:a="",seq:i=void 0,delay:e=0,allowAlmostSuccess:r=!1,onSent:n=()=>{}}={}){this.pending=!0,this.status=-1,this.allowAlmostSuccess=r,this.txPromise=s,this.err=void 0,this.hash="",this.errorCodes=a,this.seq=i,this.delay=e,this.onSent=n}get success(){return this.status===1}get almostSuccess(){return this.status===4}get ignored(){return this.status===3}async wait(s=!1){return(async()=>{let a=!1;const i=await pt(this.errorCodes);try{const e=await this.txPromise;this.onSent(e);const{hash:r,nonce:n}=e;this.seq.nonce=n,this.seq&&(delete this.seq.overrides,T().add(Object.assign(this.seq,{hash:r}))),this.hash=r,this.status=2;const I=async()=>{const{status:W,events:Q}=await e.wait(1);if(W!==1)throw this.seq&&(this.seq.err=!0),new Error("Failed");Q.some(({event:G,args:X}={})=>{if(G==="Failure"){let{info:S,detail:P,error:j}=X;const E=j.toString(),B=i[j],Z={code:E,message:B,error:j,info:S==null?void 0:S.toString(),detail:P==null?void 0:P.toString()};this.seq&&(this.seq.err=!0);const V=new Error(B);throw Object.assign(V,{code:E,raw:Z}),this.allowAlmostSuccess&&(this.status=4),V}}),this.status=1,this.seq&&(this.seq.done=!0),this.delay?T().delDelay(r,this.delay):T().del(r)};s?(a=!0,I()):await I()}catch(e){throw await tt(e),e.code===4001?this.status=3:this.status!==4&&(this.status=0),this.err=e,e}finally{this.pending=!1;const e=this.status===1;k.emit("tx-status",this.hash),e&&k.emit("tx-success",this.hash),a=e}return a})()}}const z=async t=>`${await ot()}.${t}`,R=()=>new Date().getTime(),F=async t=>{const s=sessionStorage.getItem(await z(t));if(s)return JSON.parse(s)},J=async(t,s)=>{const a=await F(t)||{};Object.assign(a,s),sessionStorage.setItem(await z(t),JSON.stringify(a))},mt=async(t,s,a="",i=[])=>{const e=await F(t);if(e)return e;const r=await U();s||(s=await nt());const n={secret:await r.makeCommitment(t,s,lt(a),i),ts:R()};return await J(t,n),n},ut=async t=>{const s=await mt(t),a=await U(),[i,e]=["commit",{}],r=[s.secret];await H(e,a,i,r);const n=a[i](...r);return new Y(n,{errorCodes:"Resolver",seq:{type:"commit",title:"Commit",ts:R(),overrides:e},onSent:()=>J(t,{ts:R()})})},gt="";var ft=Object.defineProperty,vt=Object.getOwnPropertyDescriptor,K=(t,s,a,i)=>{for(var e=i>1?void 0:i?vt(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&ft(s,a,e),e};let q=class extends f(gt){constructor(){super(...arguments),this.bindBridge=new A(this,$)}get bridge(){return $.bridge}get txScanUri(){const{hash:t}=this.tx;return t?`${this.bridge.network.current.scan}/tx/${t}`:""}render(){return o`<dui-link class="uri mt-4" href="${this.txScanUri}" target="_blank" rel="noopener">View Transaction: ${st(this.tx.hash)}</dui-link>`}};K([l({type:Object})],q.prototype,"tx",2);q=K([v("tx-view")],q);const xt=`.tx-state{display:flex;flex-direction:column;align-items:center;flex-grow:1}.tx-state-icon.success{color:green}.tx-state-icon.failed{color:red}.tx-state-icon.warn{color:orange}.tx-state-msg{word-break:break-word;white-space:normal}
`;var bt=Object.defineProperty,yt=Object.getOwnPropertyDescriptor,O=(t,s,a,i)=>{for(var e=i>1?void 0:i?yt(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&bt(s,a,e),e};let b=class extends f(xt){constructor(){super(),this.bindBridge=new A(this,$),this.txType=!1,this.onlyAwaitHash=!1,this.opts={}}get bridge(){return $.bridge}get icons(){var e;const[t='<i class="mdi mdi-check-all"></i>',s='<i class="mdi mdi-check"></i>',a='<i class="mdi mdi-close"></i>',i='<i class="mdi mdi-loading"></i>']=(e=this.opts.icons)!=null?e:[];return{success:t,failed:a,wait:i,almostSuccess:s}}get hashOk(){return this.onlyAwaitHash&&this.tx.hash}get state(){var e,r,n;let[t,s,a]=["","",""];const{state:i}=this.opts;switch(this.tx.status){case-1:[t,s,a]=[this.icons.wait,(i==null?void 0:i.wait)||"Waiting for confirmation...","wait"];break;case 0:[t,s,a]=[this.icons.failed,(r=(e=this.tx.err)==null?void 0:e.message)!=null?r:"Something went wrong","failed"];break;case 1:[t,s,a]=[this.icons.success,(i==null?void 0:i.success)||"Success","success"];break;case 2:[t,s]=[this.icons.wait,"Confirm the transaction."];break;case 4:[t,s,a]=[this.icons.almostSuccess,((n=this.tx.err)==null?void 0:n.message)||"Almost Success","warn"];break}return this.hashOk&&([t,s,a]=[this.icons.success,(i==null?void 0:i.success)||"Success","success"]),{icon:t,txt:s,css:a}}get txScanUri(){const{hash:t}=this.tx;return t?`${this.bridge.network.current.scan}/tx/${t}`:""}render(){return o`<div class="tx-state m-4"><div class="tx-state-icon my-3 text-3xl mx-auto ${this.state.css}">${d(this.tx.pending&&!this.hashOk,()=>o`<slot name="pending"><i class="mdi mdi-loading"></i></slot>`,()=>o`<span>${ht(this.state.icon)}</span>`)}</div><div class="tx-state-msg my-4"><slot>${this.state.txt}</slot></div><div class="flex gap-4">${d(this.tx.hash,()=>o`${d(this.tx.success||this.tx.almostSuccess,()=>o`<slot name="view"><tx-view .tx="${this.tx}"></tx-view></slot>`,()=>o`<tx-view .tx="${this.tx}"></tx-view>`)}`)}</div></div>`}};O([l({type:Object})],b.prototype,"tx",2);O([l({type:Boolean})],b.prototype,"txType",2);O([l({type:Boolean})],b.prototype,"onlyAwaitHash",2);O([l({type:Object})],b.prototype,"opts",2);b=O([v("tx-state")],b);var wt=Object.defineProperty,$t=Object.getOwnPropertyDescriptor,y=(t,s,a,i)=>{for(var e=i>1?void 0:i?$t(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&wt(s,a,e),e};const _t=async t=>{const s=await it("Locker",{account:(await at()).bridge.account}),[a,i,e]=["claimDoid",{},[+t]];await H(i,s,a,e);const r=s[a](...e);return new Y(r,{errorCodes:"Locker",seq:{type:"claim-name",title:"Claim Name",ts:new Date().getTime(),overrides:i}})};let u=class extends f(""){constructor(){super(...arguments),this.bindBridge=new A(this,$),this.sm=!1,this.tx=null,this.success=!1,this.dialog=!1,this.claim=async()=>{try{this.tx=await _t(+this.passId),this.success=await this.tx.wait()}catch(t){if(t.code===4001)return this.close()}}}get name(){var t;return(t=this.nameInfo)==null?void 0:t.name}get passId(){var t;return((t=this.nameInfo)==null?void 0:t.id)||0}get txPending(){var t;return this.tx&&!((t=this.tx)!=null&&t.ignored)}close(t=!1){this.dialog=!1,this.tx=void 0,t&&this.emit("success"),this.emit("show",!1)}open(){this.dialog=!0,this.emit("show",!0)}render(){return o`<dui-button ?disabled="${this.dialog}" ?pending="${this.dialog}" class="success" @click="${this.open}" ?sm="${this.sm}"><slot>Claim</slot></dui-button>${d(this.dialog,()=>{var t;return o`<dui-dialog @close="${()=>this.close()}"><div slot="header">Claim DOID name</div><div class="min-h-10">${d(!((t=this.tx)!=null&&t.success),()=>o`<div class="text-center">You are claiming for:<p class="text-black my-4 text-lg"><b class="text-blue-600">${this.name}</b>.doid</p><p>${o`(Note: This pass <b class="text-base text-orange-500">#${this.passId}</b> will be burned after claiming.)`}</p></div>`)} ${d(this.txPending,()=>o`<tx-state .tx="${this.tx}" .opts="${{state:{success:`Success. You are the registrant of ${this.name} now`}}}"><dui-button slot="view" @click="${()=>this.close(!0)}">Close</dui-button></tx-state>`,()=>o`<p class="mt-8 text-center"><dui-button class="success" @click="${this.claim}">Continue</dui-button></p>`)}</div></dui-dialog>`})}`}};y([l({type:Object})],u.prototype,"nameInfo",2);y([l({type:Boolean})],u.prototype,"sm",2);y([c()],u.prototype,"tx",2);y([c()],u.prototype,"success",2);y([c()],u.prototype,"dialog",2);u=y([v("doid-claim-name")],u);const Ot=`ol{margin-top:1rem;margin-bottom:1rem;display:grid;grid-gap:1rem;gap:1rem}@media (min-width: 768px){ol{grid-template-columns:repeat(3,minmax(0,1fr))}}ol li{position:relative;display:inline-flex;flex-direction:column;gap:1rem;border-radius:.375rem;--tw-bg-opacity: 1;background-color:rgba(243,244,246,var(--tw-bg-opacity));padding:1.25rem 1rem 1rem 3.5rem}ol li:before{position:absolute;left:.75rem;top:.75rem;display:flex;height:2rem;width:2rem;align-items:center;justify-content:center;border-radius:9999px;border-width:1px;--tw-bg-opacity: 1;background-color:rgba(255,255,255,var(--tw-bg-opacity));font-weight:700}ol li.active{--tw-bg-opacity: 1;background-color:rgba(226,232,240,var(--tw-bg-opacity))}ol li.active:before{--tw-border-opacity: 1;border-color:rgba(148,163,184,var(--tw-border-opacity))}ol li>b{display:block}ol li:nth-child(1):before{content:"1"}ol li:nth-child(2):before{content:"2"}ol li:nth-child(3):before{content:"3"}
`;var Ct=Object.defineProperty,kt=Object.getOwnPropertyDescriptor,x=(t,s,a,i)=>{for(var e=i>1?void 0:i?kt(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&Ct(s,a,e),e};let m=class extends f(Ot){constructor(){super(...arguments),this.name="",this.pending=!1,this.ts=0,this.step=1,this.tx=null,this.get=async()=>{this.ts++},this.commit=async()=>{this.pending=!0;try{this.tx=await ut(this.name);const t=await this.tx.wait();this.step=2}catch(t){if(t.code==="4001")return;/( IC)/.test(t.message)&&(this.step=2)}finally{this.pending=!1}},this.go2success=()=>{M(this.detailsLink)}}get btnDisabled(){return this.pending}get txSuccess(){return this.tx&&!this.tx.ignored}get lockedByMe(){const{locked:t,itsme:s}=this.nameInfo;return t&&s}get detailsLink(){return`/name/${this.name}/details`}connectedCallback(){this.get(),super.connectedCallback()}render(){return this.nameInfo.available?this.lockedByMe?o`<div class="px-3"><h3 class="text-base mb-4">${`This DOID name is already locked by pass #${this.nameInfo.locked}`}</h3><doid-claim-name @success="${this.go2success}" .nameInfo="${this.nameInfo}">Claim this name</doid-claim-name></div>`:o`<div class="px-3"><h3 class="text-base">Registering a name requires you to complete 3 steps</h3><ol><li class="${C({active:this.step>=1})}"><b>Request to register</b><p>Your wallet will open and you will be asked to confirm the first of two transactions required for registration. If the second transaction is not processed within 7 days of the first, you will need to start again from step 1.</p></li><li class="${C({active:this.step>=2})}"><b>Wait for 1 minute</b><p>The waiting period is required to ensure another person hasn’t tried to register the same name and protect you after your request.</p></li><li class="${C({active:this.step===3})}"><b>Complete Registration</b><p>Click ‘register’ and your wallet will re-open. Only after the 2nd transaction is confirmed you'll know if you got the name.</p></li></ol><p class="text-center"><dui-button @click="${this.commit}" ?disabled="${this.btnDisabled}" ?pending="${this.pending}">Request to Register<i class="mdi ml-2 ${C(this.$c([this.pending?"mdi-loading":"mdi-chevron-right"]))}"></i></dui-button></p></div>`:o`<div class="px-3">This DOID name is already taken.<dui-link class="mx-1" href="${this.detailsLink}">See Details</dui-link></div>`}};x([l()],m.prototype,"name",2);x([l({type:Object})],m.prototype,"nameInfo",2);x([c()],m.prototype,"pending",2);x([c()],m.prototype,"ts",2);x([c()],m.prototype,"step",2);x([c()],m.prototype,"tx",2);m=x([v("view-name-register")],m);const Dt=`.addr_name{min-width:100px;max-width:140px}.edit{margin-top:0;margin-bottom:0}.edit .addr_edit{width:14rem}@media (min-width: 1024px){.edit .addr_edit{width:24rem}}@media (max-width: 1024px){.addr_name{min-width:50px;max-width:60px}}
`;var It=Object.defineProperty,St=Object.getOwnPropertyDescriptor,p=(t,s,a,i)=>{for(var e=i>1?void 0:i?St(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&It(s,a,e),e};let h=class extends f(Dt){constructor(){super(...arguments),this.type="ETH",this.address="",this.tip={addr:""},this.err={addr:"",tx:""},this.pending={addr:!1,tx:!1},this.addr="",this.addrValid=!1,this.mode="",this.validate=()=>(this.addr?this.err={...this.err,addr:""}:this.err={...this.err,addr:"Required"},!this.inputErr),this.validAddrByType=(t=this.type)=>{this.err={...this.err,addr:""};const s=ct(this.addr);switch(this.addrValid=!1,t){case"ETH":s!=42&&(this.err={...this.err,addr:"Invalid address"});break;default:s<32&&(this.err={...this.err,addr:"Invalid address"});break}this.addrValid=!this.err.addr},this.onInputAddr=t=>{this.addr=t.detail,this.err={...this.err,addr:"",tx:""},this.validAddrByType()},this.saveAddr=()=>{!this.validate()||!this.addrValid||(console.info(`save addr of ${this.type}: ${this.addr}`),setTimeout(()=>this.mode=""))},this.cancel=()=>{this.mode="",this.err={...this.err,addr:""},this.pending={...this.pending,addr:!1}},this.disconnectedCallback=()=>{super.disconnectedCallback()}}get inputErr(){for(let t in this.err)if(t!=="tx"&&this.err[t])return!0;return!1}connectedCallback(){super.connectedCallback(),this.addr=this.address}render(){return o`<div class="flex justify-start items-center my-3 ${this.mode}"><div class="addr_name text-gray-400">${this.type}</div><div class="grow flex items-center"><div class="addr_edit">${d(this.mode==="edit",()=>o`<dui-input-text value="${this.addr}" class="sm" @input="${this.onInputAddr}" ?disabled="${this.pending.tx}"><span slot="msg">${d(this.err.addr,()=>o`<span class="text-red-500">${this.err.addr}</span>`,()=>o``)}</span></dui-input-text>`,()=>o`${d(this.address,()=>o`${this.address}<dui-copy .value="${this.address}" sm icon><span slot="copied" class="text-green-500"><i class="mdi mdi-check-circle-outline"></i> </span><span slot="copy"><i class="mdi mdi-content-copy"></i></span></dui-copy>`,()=>o`<span class="text-gray-400">No set</span>`)}`)}</div>${d(this.mode==="edit",()=>o`<dui-button sm text class="ml-1 outlined" @click="${this.saveAddr}">Save</dui-button><dui-button sm text class="ml-1 outlined" @click="${this.cancel}">Cancel</dui-button>`,()=>o`<dui-button sm icon class="ml-1"><i class="mdi mdi-pencil-outline" @click="${()=>this.mode="edit"}"></i></dui-button>`)}</div></div>`}};p([l({type:String})],h.prototype,"type",2);p([l({type:String})],h.prototype,"address",2);p([c()],h.prototype,"tip",2);p([c()],h.prototype,"err",2);p([c()],h.prototype,"pending",2);p([c()],h.prototype,"addr",2);p([c()],h.prototype,"addrValid",2);p([c()],h.prototype,"mode",2);h=p([v("edit-addr-inline")],h);const Pt=`.item_key{width:13rem;font-weight:500;min-width:140px;max-width:180px}
`;var jt=Object.defineProperty,Tt=Object.getOwnPropertyDescriptor,D=(t,s,a,i)=>{for(var e=i>1?void 0:i?Tt(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&jt(s,a,e),e};let _=class extends f(Pt){constructor(){super(...arguments),this.name="",this.pending=!1,this.ts=0,this.get=async()=>{this.ts++}}get empty(){return!1}connectedCallback(){this.get(),super.connectedCallback()}render(){return o`<div class="px-3 py-4"><div class="flex justify-start items-center mb-3"><div class="item_key">PARENT</div><div><a href="/name/doid/details" class="text-blue-500">doid</a></div></div><hr class="mb-3 border-t border-dashed border-gray-300"><div class="flex flex-col lg_flex-row justify-start items-start mb-3"><div class="item_key">ADDRESS</div><div class="flex flex-col"><edit-addr-inline address=""></edit-addr-inline><edit-addr-inline type="BSC"></edit-addr-inline><edit-addr-inline type="OKC"></edit-addr-inline></div></div></div>`}};D([l()],_.prototype,"name",2);D([c()],_.prototype,"pending",2);D([c()],_.prototype,"ts",2);_=D([v("view-name-details")],_);const Rt=`:host::part(dui-nav){display:flex;margin-bottom:-2px}
`;var qt=Object.defineProperty,At=Object.getOwnPropertyDescriptor,w=(t,s,a,i)=>{for(var e=i>1?void 0:i?At(s,a):s,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(i?n(s,a,e):n(e))||e);return i&&e&&qt(s,a,e),e};let g=class extends f(Rt){constructor(){super(...arguments),this.name="",this.action="",this.pending=!1,this.disconnected=!1,this.nameInfo=null,this.goto=()=>{rt(`/name/${N(this.name)}/${this.action}`)},this.check=async(t,s=!1)=>{if(this.pending||await this.isDisconnected(s))return;this.pending=!0;const a=N(this.name);if(this.name!==a)this.name=a;else try{if(await this.isDisconnected(!0)||(this.nameInfo=await dt(this.name),await this.isDisconnected(!0)))return;this.action||(this.action=this.nameInfo.available?"register":"details")}catch(i){this.nameInfo=null}this.goto(),this.pending=!1}}get inReg(){return this.nameInfo&&!this.pending&&this.action==="register"}get inDetails(){return this.name&&!this.pending&&this.action==="details"}get empty(){return!this.name}connectedCallback(){super.connectedCallback(),this.check(null,!0),k.on("router-change",this.check)}disconnectedCallback(){super.disconnectedCallback(),k.off("router-change",this.check)}render(){return o`<div class="view-name"><div class="dui-container"><dui-ns-search .text="${this.name}" @search="${t=>M(`/search/${t.detail}`)}" placeholder="Search names"><span slot="label"></span> <span slot="msgd"></span></dui-ns-search>${d(this.name,()=>o`<div class="border-b-2 flex my-4 px-3 pr-4 justify-between"><div><b>${this.name}</b> ${d(this.name==="doid",()=>o`<em>(Registrant)</em>`)}</div><div><dui-nav slot="center" part="dui-nav"><dui-link href="${`/name/${this.name}/register`}" alias="${`/name/${this.name}`}" exact nav>Register</dui-link><dui-link href="${`/name/${this.name}/details`}" exact nav>Details</dui-link></dui-nav></div></div>`)} ${d(this.pending,()=>o`<i class="mdi mdi-loading"></i> Loading...`)} ${d(this.inReg,()=>o`<view-name-register .name="${this.name}" .nameInfo="${this.nameInfo}"></view-name-register>`)} ${d(this.inDetails,()=>o`<view-name-details .name="${this.name}"></view-name-details>`)}</div></div>`}};w([l()],g.prototype,"name",2);w([l()],g.prototype,"action",2);w([c()],g.prototype,"pending",2);w([c()],g.prototype,"disconnected",2);w([c()],g.prototype,"nameInfo",2);g=w([v("view-name")],g);export{g as ViewName};
